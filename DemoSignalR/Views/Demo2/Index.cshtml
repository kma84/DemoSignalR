
@{
    Layout = null;
    ViewData["Title"] = "Demo2";
}

<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/site.css" />

    <title>@ViewData["Title"]</title>
</head>
<body>

    <nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4">
        <a class="navbar-brand" href="#">@ViewData["Title"]</a>
    </nav>

    <div class="container">

        <div class="row">
            <div class="col-sm-8">
                <div class="card" id="panelPregunta" style="display:none">
                    <div class="card-header"></div>
                    <ul class="list-group list-group-flush"></ul>
                    <div class="card-footer text-right">
                        <button type="button" class="btn btn-outline-dark" id="btnSiguientePregunta" disabled>Siguiente Pregunta</button>
                    </div>
                </div>
            </div>

            <div class="col-sm-4">
                <div class="card" id="panelJugadores" style="display:none">
                    <div class="card-header">Jugadores</div>
                    <ul class="list-group list-group-flush">
                    </ul>
                </div>
            </div>
        </div>

    </div>

    <!-- Modal Nombre de usuario -->
    <div class="modal fade" id="modalNombreUsuario" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="modalNombreUsuarioLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalNombreUsuarioLabel">@ViewData["Title"]</h5>
                </div>
                <div class="modal-body">

                    <form class="form-inline" onsubmit="return false;">
                        <input type="text" class="form-control mb-2 mr-sm-2" id="txtNombreUsuario" placeholder="Nombre de usuario">
                        <button type="button" class="btn btn-primary mb-2" id="btnJugar">¡Jugar!</button>
                    </form>

                </div>
            </div>
        </div>
    </div>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
    <script src="~/js/signalr.js"></script>

    <script type="text/javascript">

        $(function () {

            var nombreUsuario;
            var preguntaActual;
            var hub;

            $('#modalNombreUsuario').modal('show');

            $("#btnJugar").on("click", function () {
                if ($("#txtNombreUsuario").val().length > 2) {
                    nombreUsuario = $("#txtNombreUsuario").val();
                    $('#modalNombreUsuario').modal('hide');

                    hub = conectarHub();
                    $('#panelPregunta, #panelJugadores').show();
                }
            });

            $('#modalNombreUsuario').on('hidden.bs.modal', function () {
                $('#modalNombreUsuario').modal('dispose');
            })

            $("#panelPregunta").on("click", ".clickable-items li", function () {

                // TODO revisar esta igualdad. Falla si la respuesta correcta contiene carácteres especiales
                var respuestaCorrecta = $(this).html() === preguntaActual.correctAnswer;

                $(this).parent().removeClass('clickable-items');

                $(this).addClass(respuestaCorrecta ? "list-group-item-success" : "list-group-item-danger");
                $(this).siblings()
                    .filter(function () { return $(this).html() === preguntaActual.correctAnswer; })
                    .addClass("list-group-item-success");

                añadirPuntuacion(nombreUsuario, respuestaCorrecta);

                $('#btnSiguientePregunta').prop('disabled', (_, valor) => !valor);

            });

            $("#btnSiguientePregunta").on("click", function () {

                hub.invoke("SiguientePregunta");
                $('#btnSiguientePregunta').prop('disabled', (_, valor) => !valor);

            });
            

            function conectarHub() {
                var connection = new signalR.HubConnectionBuilder()
                    .withUrl('/hubs/PreguntasHub')
                    .build();

                connection.start()
                    .then(function () {
                        connection.invoke("JugadorNuevo", nombreUsuario);
                        connection.invoke("SiguientePregunta");
                    })
                    .catch(function (error) {
                        console.error(error.message);
                    });

                connection.on("siguiente-pregunta", function (pregunta) {
                    preguntaActual = pregunta;
                    cargarPregunta(pregunta);
                });

                connection.on("jugador-nuevo", function (jugador) {
                    var jugadorActual = jugador === nombreUsuario;
                    añadirJugador(jugador, 0, 0, jugadorActual);
                    
                    if (jugadorActual) {
                        // Es la primera carga del jugador actual, obtenemos el resto de jugadores
                        connection.invoke("ObtenerJugadores");
                    }
                });
                
                //connection.on("jugador-desconectado", function (count) {
                //    //$("#labelUsuariosConectados").text("Usuarios conectados: " + count);
                //});

                connection.on("jugadores", function (jugadores) {
                    jugadores.filter((j) => j !== nombreUsuario)
                             .forEach((j) => añadirJugador(j, 0, 0, false));
                });

                return connection;
            };


            function añadirJugador(jugador, numAciertos, numErrores, jugadorEsUsuarioActual) {

                var jugadorStr = jugadorEsUsuarioActual ? `<strong>${jugador}</strong>` : jugador;

                const item = `
                    <li class="list-group-item" id="row-${jugador}">
	                    <div class="row justify-content-start">
		                    <div class="col-4">${jugadorStr}</div>
		                    <div class="col-4">
			                    <span class="badge badge-pill badge-success">${numAciertos}</span>
			                    <span class="badge badge-pill badge-danger">${numErrores}</span>
		                    </div>
	                    </div>
                    </li>
                    `;
                
                var ulJugadores = $("#panelJugadores .list-group");

                ulJugadores.append(item);
            };


            function añadirPuntuacion(jugador, respuestaCorrecta) {
                
                var tipoBadge = respuestaCorrecta ? "success" : "danger";
                var badge = $(`#row-${jugador} .badge-${tipoBadge}`);

                badge.html(+badge.html() + 1);
            };


            function cargarPregunta(pregunta) {

                var ulPreguntas = $("#panelPregunta .list-group")

                ulPreguntas.addClass('clickable-items');
                ulPreguntas.empty();

                $('#panelPregunta .card-header').html(pregunta.question);

                var respuestas = pregunta.incorrectAnswers.slice();
                respuestas.push(pregunta.correctAnswer);
                respuestas.sort();

                var respuestasHtml = $.map(respuestas, function (resp) {
                    return "<li class='list-group-item'>" + resp + "</li>";
                });
                ulPreguntas.append(respuestasHtml);
            };

        });
               
    </script>

</body>
</html>
